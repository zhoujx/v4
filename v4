#include<stdio.h>//v4
#include<string.h>
#include<stdlib.h>
int isOperator(char c)
{
	if(c=='+'||c=='-'||c=='*'||c=='/')
		return 1;
	else return 0;
}
void moveOperator(char *p)
{
	while(*p!='\0')
	{
		*p=*(p+1);
		p++;
	}
} 
void moveOperand(float *p,float *end)
{
	while(p!=end)
	{
		*p=*(p+1);
		p++;
	}
}

int main()
{
	char strExp[]="1-2.5*4+10.2/5.1";
	char operators[100]={'\0'};
	float operands[100];
	int operatorsIndex=0;
	//分离操作符
	int i;
	for(i=0;i<strlen(strExp);i++)
	{
		if(isOperator(strExp[i])) operators[operatorsIndex++]=strExp[i];
	}
	//分离操作数
	int operandsIndex=0;
	for(i=0;i<strlen(strExp);i++)
	{
		char temp[100]={'\0'};
		int tempIndex=0;
		while(!isOperator(strExp[i]))   
		{
			temp[tempIndex]=strExp[i];
			i++;
			tempIndex++;
		}
		float floatV=atof(temp);
        operands[operandsIndex++]=floatV;
	}
    //乘除
	
	char *poperator=operators;
	float *poperand=operands;
	while(*poperator!='\0')
	{
		if(*poperator=='*')
		{//A是左B是右
			float A=*poperand;
			float B=*(poperand+1);
			float res=A*B;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,operands[operandsIndex--]);
		}else if(*operator=='/')
			{   
			     float A=*poperand;
			     float B=*(poperand+1);
			     float res=A/B;
			     *poperand=res;
			     moveOperator(poperator);
				 moveOperand(poperand+1,operands[operandsIndex--]);
			}else{
			poperator++;
			poperand++;
		}
	}
	//加减
    poperator=operators;
	poperand=operands;
	while(*poperator!='\0')
	{
		if(*poperator=='+'){
			float A=*poperand;
			float B=*(poperand+1);
			float res=A+B;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,operands[operandsIndex--]);
		}else if(*operator=='-'){   
			float A=*poperand;
			float B=*(poperand+1);
			float res=A-B;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,operands[operandsIndex--]);
		}
	}
	printf("the result is %0.2f",operand[0]);
	return 0;
}
